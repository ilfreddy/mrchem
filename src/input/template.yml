keywords:
  - name: world_prec
    type: float
    predicates:
      - '1.0e-10 < value < 1.0'
    docstring: |
      Overall relative precision in the calculation.
  - name: world_size
    type: int
    default: -1
    predicates:
      - 'value <= 10'
    docstring: |
      Total size of computational domain given as 2**(world_size). Always cubic
      and symmetric around the origin. Negative value means it will be computed
      from the molecular geometry.
sections:
  - name: Plotter
    docstring: |
      Cube plots of converged orbitals and densities.
    keywords:
      - name: points
        type: List[int]
        default: [20, 20, 20]
        predicates:
          - 'value[0] > 0'
          - 'value[1] > 0'
          - 'value[2] > 0'
        docstring: |
          Number of points in each direction on the cube grid.
      - name: O
        type: List[float]
        default: [0.0, 0.0, 0.0]
        docstring: |
          Origin of cube plot.
      - name: A
        type: List[float]
        default: [1.0, 0.0, 0.0]
        docstring: |
          First boundary vector for plot.
      - name: B
        type: List[float]
        default: [0.0, 1.0, 0.0]
        docstring: |
          Second boundary vector for plot.
      - name: C
        type: List[float]
        default: [0.0, 0.0, 1.0]
        docstring: |
          Third boundary vector for plot.
  - name: Precisions
    docstring: |
      Define specific precision parameters.
    keywords:
      - name: nuc_prec
        type: float
        default: "user['world_prec']"
        predicates:
          - '1.0e-10 < value < 1.0'
        docstring: |
          Precision parameter used in smoothing and projection of nuclear potential.
      - name: dft_prec
        type: float
        default: "user['world_prec']"
        predicates:
          - '1.0e-10 < value < 1.0'
        docstring: |
          Precision parameter used in DFT grid.
      - name: poisson_prec
        type: float
        default: "user['world_prec']"
        predicates:
          - '1.0e-10 < value < 1.0'
        docstring: |
          Precision parameter used in construction of Poisson operators.
      - name: helmholtz_prec
        type: float
        default: "user['world_prec']"
        docstring: |
          Precision parameter used in construction of Helmholtz operators.
          Negative value means it will follow the dynamic precision in SCF.
      - name: orth_prec
        type: float
        default: 1.0e-14
        docstring: |
          Precision parameter used in the response density projection operator (1 - rho_0).
  - name: Printer
    docstring: |
      Define variables for printed output.
    keywords:
      - name: print_level
        type: int
        default: 0
        predicates:
          - 'value >= 0'
        docstring: |
          Level of detail in the written output. Level 0 for production calculations.
      - name: print_input
        type: bool
        default: false
        docstring: |
          Print the user input file at the start of the calculation.
      - name: print_mpi
        type: bool
        default: false
        docstring: |
          Write separate output from each MPI to file called <file_name>-<mpi-rank>.out.
      - name: file_name
        type: str
        default: 'mrchem'
        docstring: |
          Name of output file in MPI print.
      - name: print_prec
        type: int
        default: 6
        predicates:
          - '0 < value < 10'
        docstring: |
          Number of digits in property output (energy with factor two).
      - name: print_width
        type: int
        default: 70
        predicates:
          - '50 < value < 100'
        docstring: |
          Line width of printed output (in number of characters).
  - name: MPI
    docstring: |
      Define MPI related parameters.
    keywords:
      - name: numerically_exact
        type: bool
        default: false
        docstring: |
          This will use MPI algorithms that guarantees that the output is
          invariant wrt the number of MPI processes.
      - name: shared_memory_size
        type: int
        default: 10000
        docstring: |
          Size (MB) of the MPI shared memory blocks of each shared function.
      - name: share_nuclear_potential
        type: bool
        default: false
        docstring: |
          This will use MPI shared memory for the nuclear potential.
      - name: share_coulomb_density
        type: bool
        default: false
        docstring: |
          This will use MPI shared memory for the Coulomb density.
      - name: share_coulomb_potential
        type: bool
        default: false
        docstring: |
          This will use MPI shared memory for the Coulomb potential.
      - name: share_xc_density
        type: bool
        default: false
        docstring: |
          This will use MPI shared memory for the exchange-correlation density.
      - name: share_xc_potential
        type: bool
        default: false
        docstring: |
          This will use MPI shared memory for the exchange-correlation potential.
  - name: Basis
    docstring: |
      Define polynomial basis.
    keywords:
      - name: order
        type: int
        default: -1
        docstring: |
          Polynomial order of multiwavelet basis. Negative value means it will
          be set automatically based on the world precision.
      - name: type
        type: str
        default: 'interpolating'
        predicates:
          - "value[0].lower() in ['i', 'l']"
        docstring: |
          Polynomial type of multiwavelet basis.
  - name: Derivatives
    docstring: |
      Define various derivative operators used in the code.
    keywords:
      - name: kinetic
        type: str
        default: 'abgv_55'
        docstring: |
          Derivative used in kinetic operator.
      - name: h_orb
        type: str
        default: 'abgv_00'
        docstring: |
          Derivative used in magnetic dipole operator.
      - name: h_pso
        type: str
        default: 'abgv_00'
        docstring: |
          Derivative used in paramagnetic spin-orbit operator.
      - name: dft
        type: str
        default: 'abgv_00'
        docstring: |
          Derivative used in exchange-correlation operator.
  - name: Molecule
    docstring: |
      Define molecule.
    keywords:
      - name: charge
        type: int
        default: 0
        docstring: |
          Total charge of molecule.
      - name: multiplicity
        type: int
        default: 1
        docstring: |
          Spin multiplicity of molecule.
      - name: angstrom
        type: bool
        default: false
        docstring: |
          Coordinates given in angstrom rather than bohr.
      - name: translate
        type: bool
        default: false
        docstring: |
          Translate center of mass to origin.
      - name: coords
        type: str
        docstring: |
          Coordinates in xyz format.
  - name: WaveFunction
    docstring: |
      Define the wavefunction method.
    keywords:
      - name: method
        type: str
        predicates:
          - "value.lower() in
             ['core',
              'hartree',
              'hf',
              'hartreefock',
              'hartree-fock',
              'dft',
              'lda',
              'svwn3',
              'svwn5',
              'pbe',
              'pbe0',
              'bpw91',
              'bp86',
              'b3p86',
              'b3p86-g',
              'blyp',
              'b3lyp',
              'b3lyp-g',
              'olyp',
              'kt1',
              'kt2',
              'kt3']"
        docstring: |
          Wavefunction method. See predicates for valid methods. 'hf',
          'hartreefock' and 'hartree-fock' all mean the same thing, while 'lda'
          is an alias for 'svwn5'. You can set a non-standard DFT functional
          (e.g. varying the amount of exact exchange) by choosing 'dft' and
          specifing the functional(s) in the 'DFT' section below.
      - name: restricted
        type: bool
        default: true
        docstring: |
          Use spin restricted wavefunction.
  - name: DFT
    docstring: |
      Define the exchange-correlation functional in case of DFT.
    keywords:
      - name: spin
        type: bool
        default: "not(user['WaveFunction']['restricted'])"
        docstring: |
          Use spin separated density functionals.
      - name: use_gamma
        type: bool
        default: false
        docstring: |
          Express functional derivative through the gradient invariant gamma.
      - name: density_cutoff
        type: float
        default: 0.0
        docstring: |
          Hard cutoff for passing density values to XCFun.
      - name: functionals
        type: str
        default: ' '
        docstring: |
          List of density functionals with numerical coefficient. E.g. for PBE0
          'EXX 0.25', 'PBEX 0.75', 'PBEC 1.0'. See xcfun documentation for valid
          functionals.
  - name: Properties
    docstring: |
      Provide a list of properties to compute.
    keywords:
      - name: scf_energy
        type: bool
        default: true
        docstring: |
          Compute SCF energy.
      - name: dipole_moment
        type: bool
        default: false
        docstring: |
          Compute dipole moment.
      - name: quadrupole_moment
        type: bool
        default: false
        docstring: |
          Compute quadrupole moment.
      - name: geometry_derivative
        type: bool
        default: false
        docstring: |
          Compute geometric derivative.
      - name: polarizability
        type: bool
        default: false
        docstring: |
          Compute polarizability tensor.
      - name: hyperpolarizability
        type: bool
        default: false
        docstring: |
          Compute hyperpolarizability tensor.
      - name: optical_rotation
        type: bool
        default: false
        docstring: |
          Compute optical rotation tensor.
      - name: magnetizability
        type: bool
        default: false
        docstring: |
          Compute magnetizability tensor.
      - name: nmr_shielding
        type: bool
        default: false
        docstring: |
          Compute NMR shielding tensors.
      - name: spin_spin_coupling
        type: bool
        default: false
        docstring: |
          Compute spin-spin coupling tensors.
      - name: hyperfine_coupling
        type: bool
        default: false
        docstring: |
          Compute hyperfine coupling tensors.
  - name: ExternalFields
    docstring: |
      Define external electromagnetic fields.
    keywords:
      - name: electric_field
        type: List[float]
        default: []
        predicates:
          - 'len(value) == 0 or len(value) == 3'
        docstring: |
          Strength of external electric field.
  - name: Polarizability
    docstring: |
      Give details regarding the polarizability calculation.
    keywords:
      - name: velocity
        type: bool
        default: false
        docstring: |
          Use velocity gauge in calculation of polarizability tensor.
      - name: frequency
        type: List[float]
        default: []
        docstring: |
          List of external field frequencies.
      - name: wavelength
        type: List[float]
        default: []
        docstring: |
          List of external field wavelengths.
  - name: SCF
    docstring: |
      Includes parameters related to the ground state SCF orbital optimization
      (algorithm using explicit calculation of kinetic energy matrix).
    keywords:
      - name: run
        type: bool
        default: true
        docstring: |
          Run SCF solver. Otherwise properties are computed on the initial orbitals.
      - name: max_iter
        type: int
        default: -1
        docstring: |
          Maximum number of SCF iterations.
      - name: kain
        type: int
        default: 0
        docstring: |
          Length of KAIN iterative history.
      - name: rotation
        type: int
        default: 0
        docstring: |
          Number of iterations between each diagonalization/localization.
      - name: localize
        type: bool
        default: false
        docstring: |
          Use canonical or localized orbitals.
      - name: orbital_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for orbtial residuals.
      - name: property_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for SCF energy.
      - name: guess_prec
        type: float
        default: "user['world_prec']"
        predicates:
          - '1.0e-10 < value < 1.0'
        docstring: |
          Precision parameter used in construction of initial guess.
      - name: start_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, initial value.
      - name: final_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, final value.
      - name: initial_guess
        type: str
        predicates:
          - "value.lower() in
            ['mw',
             'gto',
             'core_sz',
             'core_dz',
             'core_tz',
             'core_qz',
             'sad_sz',
             'sad_dz',
             'sad_tz',
             'sad_qz']"
        docstring: |
          Type of initial guess. 'mw' reads previously computed orbitals (must
          be written using the same world size and polynomial type/order). 'gto'
          reads precomputed GTO orbitals (requires extra non-standard input
          files for basis set and MO coefficients). 'core' and 'sad' will
          diagonalize the Fock matrix in the given AO basis (SZ, DZ, TZ or QZ)
          using a Core or Superposition of Atomic Densities Hamiltonian,
          respectively.
      - name: write_orbitals
        type: bool
        default: false
        docstring: |
          Write converged orbitals to disk. Can be used as 'mw' initial guess in
          subsequent calculations.
      - name: plot_density
        type: bool
        default: false
        docstring: |
          Plot converged electron density. Including spin densities for open-shell.
      - name: plot_orbital
        type: List[int]
        default: []
        docstring: |
          Plot converged molecular orbitals of given index. If the first index
          is negative, all orbitals will be plotted.
  - name: KineticFree
    docstring: |
      Includes parameters related to the ground state SCF optimization
      (kinetic free algorithm).
    keywords:
      - name: run
        type: bool
        default: false
        docstring: |
          Run kinetic free SCF solver.
      - name: max_iter
        type: int
        default: -1
        docstring: |
          Maximum number of SCF iterations.
      - name: localize
        type: bool
        default: false
        docstring: |
          Use canonical or localized orbitals.
      - name: start_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, initial value.
      - name: final_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, final value.
      - name: orbital_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for orbtial residuals.
      - name: property_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for SCF energy.
  - name: Response
    docstring: |
      Includes parameters related to the response SCF optimization.
    keywords:
      - name: run
        type: bool
        default: true
        docstring: |
          Run response solver.
      - name: max_iter
        type: int
        default: -1
        docstring: |
          Maximum number of response iterations.
      - name: kain
        type: int
        default: 0
        docstring: |
          Length of KAIN iterative history.
      - name: localize
        type: bool
        default: false
        docstring: |
          Use canonical or localized orbitals.
      - name: orbital_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for orbtial residuals.
      - name: property_thrs
        type: float
        default: -1.0
        docstring: |
          Convergence threshold for SCF energy.
      - name: directions
        type: List[int]
        default: [1, 1, 1]
        docstring: |
          In which Cartesian directions to run response solver.
      - name: start_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, initial value.
      - name: final_prec
        type: float
        default: -1.0
        docstring: |
          Incremental precision in SCF iterations, final value.
      - name: initial_guess
        type: str
        default: 'none'
        docstring: |
          Type of initial guess for response.
      - name: write_orbitals
        type: bool
        default: false
        docstring: |
          Write converged perturbed orbitals to disk.
